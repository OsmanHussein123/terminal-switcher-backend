version: '3.4'

services:
  securityservice:
    image: ${DOCKER_REGISTRY-}securityservice
    build:
      context: .
      dockerfile: SecurityService/Dockerfile
  activityservice:
    image: ${DOCKER_REGISTRY-}activityservice
    ports:
        - "7081:80"
        - "7082:443"
    build:
        context: .
        dockerfile: ActivityService/Dockerfile
  loginservice:
    image: ${DOCKER_REGISTRY-}loginservice
    environment:  
        - CONNECTIONSTRINGS__DefaultConnection=server=mssql,1433;Initial Catalog=db;Persist Security Info=False;User ID=sa;Password=S3cur3P@ssW0rd!;MultipleActiveResultSets=False;Encrypt=False;TrustServerCertificate=True;Connection Timeout=30;
    build:
      context: .
      dockerfile: LoginService/Dockerfile
    ports:
        - "9081:80"
        - "9082:443"
  containerservice:
    image: ${DOCKER_REGISTRY-}containerservice
    environment:  
        - CONNECTIONSTRINGS__DefaultConnection=server=mssql,1433;Initial Catalog=db;Persist Security Info=False;User ID=sa;Password=S3cur3P@ssW0rd!;MultipleActiveResultSets=False;Encrypt=False;TrustServerCertificate=True;Connection Timeout=30;
        - MongoDBConfig__CommandCollectionName=Commands;
        - MongoDBConfig__ConnectionString=mongodb://root:rootpassword@mongodb:27017;
        - MongoDBConfig__DatabaseName=CommandDatabase; 
    build:
      context: .
      dockerfile: ContainerService/Dockerfile
    ports:
        - "8081:80"
        - "8082:443"
  mssql:
        image: "mcr.microsoft.com/mssql/server:2022-latest"
        ports:
          - "1433:1433"
        environment:
            SA_PASSWORD: "S3cur3P@ssW0rd!"
            ACCEPT_EULA: "Y"
  mongodb:
      image: mongo:latest
      environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: rootpassword
      ports:
        - 27017:27017
      volumes:
        - mongodb_data_container:/data/db
volumes:
  mongodb_data_container:

